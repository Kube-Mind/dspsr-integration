ARG SKA_PST_BUILDTOOLS_BASE_IMAGE=""

FROM $SKA_PST_BUILDTOOLS_BASE_IMAGE as base

ENV DEBIAN_FRONTEND=noninteractive
ENV LD_LIBRARY_PATH=/usr/local/lib/

ARG DEPENDENCIES_PATH=/mnt/ska-pst-buildtools/dependencies/ska-pst-buildtools

# Copy installation payloads
COPY ./dependencies/ /mnt/ska-pst-buildtools/dependencies/
COPY Makefile /mnt/ska-pst-buildtools
COPY .pst /mnt/ska-pst-buildtools/.pst/
COPY .make /mnt/ska-pst-buildtools/.make/
COPY ./resources/ /mnt/ska-pst-buildtools/resources/
COPY ./images/ska-pst-buildtools/ctest2junit.xsl /usr/local/share/ctest2junit/
COPY ./images/ska-pst-buildtools/ctest2junit /usr/local/bin/

WORKDIR /mnt/ska-pst-buildtools

# Prepare environment
ARG APT_DEPENDENCIES_PATH=${DEPENDENCIES_PATH}/apt.txt
RUN stat ${APT_DEPENDENCIES_PATH} \
    && apt-get update -y \
    && apt upgrade -y \
    && apt-get install --no-install-recommends --no-install-suggests -y $(cat ${APT_DEPENDENCIES_PATH}) \
    && apt-get autoremove --yes \
    && rm -rf /var/lib/apt/lists/*

# Install common pip dependencies
ARG PIP_CLI_PAYLOAD=${DEPENDENCIES_PATH}/pip.txt
RUN stat ${PIP_CLI_PAYLOAD} \
    && PIP_CLI_PAYLOAD=${PIP_CLI_PAYLOAD} make local-pip-install

# start with the base image as a builder, so we can return to this later
FROM base as base-builder

ENV DEBIAN_FRONTEND=noninteractive
ENV LD_LIBRARY_PATH=/usr/local/lib

ARG GRPC_VERSION=1.73.0
ARG GRPC_REPOSITORY=https://github.com/grpc/grpc
ARG GRPC_FILE_FOLDER=grpc-${GRPC_VERSION}
ARG GRPC=grpc

WORKDIR /mnt/${GRPC}
RUN git clone --recurse-submodules -b v${GRPC_VERSION} --depth 1 \
    --shallow-submodules ${GRPC_REPOSITORY} ${GRPC_FILE_FOLDER}

WORKDIR /mnt/${GRPC}-build
RUN cmake -DgRPC_INSTALL=ON \
        -DBUILD_SHARED_LIBS=ON \
        -DgRPC_BUILD_TESTS=OFF \
        -Dprotobuf_BUILD_TESTS=OFF \
        -DCMAKE_CXX_STANDARD=17 \
        -DCMAKE_BUILD_TYPE=Release \
        -DgRPC_ZLIB_PROVIDER=package \
        -DCMAKE_INSTALL_PREFIX=/usr/local/grpc \
        /mnt/${GRPC}/${GRPC_FILE_FOLDER} \
    && make -j$(nproc) install \
    && ldconfig

ARG GOLANG=golang-go
ARG GOLANG_VERSION=1.24.4
ARG GOLANG_FILE=go${GOLANG_VERSION}.linux-amd64.tar.gz
ARG GOLANG_RELEASE_FILE=https://go.dev/dl/${GOLANG_FILE}

WORKDIR /mnt/${GOLANG}-${GOLANG_VERSION}
RUN rm -rf /usr/local/go \
    && curl -L -O ${GOLANG_RELEASE_FILE} \
    && tar -C /usr/local -xzf ${GOLANG_FILE}

ENV PATH $PATH:/usr/local/go/bin
ENV GOPATH /usr/local/protoc-gen-doc

ARG PROTOC_GEN_DOC_VERSION=1.5.1
ARG PROTOC_GEN_DOC_RELEASE_URL=https://github.com/pseudomuto/protoc-gen-doc/archive/refs/tags
ARG PROTOC_GEN_DOC_RELEASE_FILE=v${PROTOC_GEN_DOC_VERSION}.tar.gz
ARG PROTOC_GEN_DOC_FILE_FOLDER=protoc-gen-doc-${PROTOC_GEN_DOC_VERSION}
ARG PROTOC_GEN_DOC=protoc-gen-doc

WORKDIR /mnt/${PROTOC_GEN_DOC}
RUN curl -L -O ${PROTOC_GEN_DOC_RELEASE_URL}/${PROTOC_GEN_DOC_RELEASE_FILE} \
    && tar -xvf ${PROTOC_GEN_DOC_RELEASE_FILE} \
    && stat ${PROTOC_GEN_DOC_FILE_FOLDER} \
    && cd ${PROTOC_GEN_DOC_FILE_FOLDER} \
    && go install ./cmd/protoc-gen-doc \
    && /usr/local/protoc-gen-doc/bin/protoc-gen-doc -version

# Prepare environment for PSRDADA
ARG PSRDADA=psrdada-code
WORKDIR /mnt/${PSRDADA}-build

# Compile PSRDADA without IBVERBS and RDMACM
# CUDA architectures 80:A100, 86:A40, 89:L40, supported by CUDA 12.4.0
RUN cmake /mnt/ska-pst-buildtools/resources/${PSRDADA} \
        -DCMAKE_CUDA_ARCHITECTURES="80;86;89" \
        -DCMAKE_DISABLE_FIND_PACKAGE_rdmacm=TRUE \
        -DCMAKE_DISABLE_FIND_PACKAGE_ibverbs=TRUE \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr/local/psrdada \
        -DBUILD_TESTING=OFF \
    && make -j$(nproc) install \
    && ldconfig

ARG SPDLOG_VERSION=1.15.2
ARG SPDLOG_RELEASE_URL=https://github.com/gabime/spdlog/archive/refs/tags/
ARG SPDLOG_RELEASE_FILE=v${SPDLOG_VERSION}.tar.gz
ARG SPDLOG_FILE_FOLDER=spdlog-${SPDLOG_VERSION}
ARG SPDLOG=spdlog

WORKDIR /mnt/${SPDLOG}
RUN curl -L -O ${SPDLOG_RELEASE_URL}/${SPDLOG_RELEASE_FILE} \
    && tar -xvf ${SPDLOG_RELEASE_FILE} \
    && stat ${SPDLOG_FILE_FOLDER}

WORKDIR /mnt/${SPDLOG}/${SPDLOG_FILE_FOLDER}
COPY ./src/spdlog/include/tweakme.h ./include/spdlog/tweakme.h

WORKDIR /mnt/${SPDLOG}-build
RUN cmake /mnt/${SPDLOG}/${SPDLOG_FILE_FOLDER} \
      -DCMAKE_INSTALL_PREFIX=/usr/local/spdlog \
      -DCMAKE_POSITION_INDEPENDENT_CODE=on \
      -DSPDLOG_FMT_EXTERNAL=ON \
    && make -j$(nproc) install \
    && ldconfig

ARG GOOGLETEST_VERSION=1.17.0
ARG GOOGLETEST_RELEASE_URL=https://github.com/google/googletest/archive/refs/tags
ARG GOOGLETEST_RELEASE_FILE=v${GOOGLETEST_VERSION}.tar.gz
ARG GOOGLETEST_FILE_FOLDER=googletest-${GOOGLETEST_VERSION}
ARG GOOGLETEST=googletest

WORKDIR /mnt/${GOOGLETEST}
RUN curl -L -O ${GOOGLETEST_RELEASE_URL}/${GOOGLETEST_RELEASE_FILE} \
    && stat ${GOOGLETEST_RELEASE_FILE} \
    && tar -xvf ${GOOGLETEST_RELEASE_FILE} \
    && stat ${GOOGLETEST_FILE_FOLDER}

WORKDIR /mnt/${GOOGLETEST}-build
RUN cmake /mnt/${GOOGLETEST}/${GOOGLETEST_FILE_FOLDER} \
      -DCMAKE_INSTALL_PREFIX=/usr/local/googletest \
    && make -j$(nproc) install \
    && ldconfig

# Remove cached pyyaml info file and build-tools directory
RUN rm -rf /usr/lib/python3/dist-packages/PyYAML-5.4.1.egg-info \
  /mnt/ska-pst-buildtools

FROM base as base-runtime

RUN rm -rf /mnt/ska-pst-buildtools

COPY ./images/ska-pst-buildtools/pst-builder.conf /etc/ld.so.conf.d/

# Install runtime dependencies, build artefacts
RUN --mount=type=bind,from=base-builder,target=/builder \
    cp -rd /builder/usr/local/grpc /usr/local/grpc \
    && cp -rd /builder/usr/local/psrdada /usr/local/psrdada \
    && cp -rd /builder/usr/local/spdlog /usr/local/spdlog \
    && cp -rd /builder/usr/local/go /usr/local/go \
    && cp -rd /builder/usr/local/googletest /usr/local/googletest \
    && cp -rd /builder/usr/local/protoc-gen-doc /usr/local/protoc-gen-doc \
    && ldconfig

ENV \
  PKG_CONFIG_PATH=/usr/local/psrdada/lib/pkgconfig:/usr/local/grpc/lib/pkgconfig:/usr/local/spdlog/lib/pkgconfig:/usr/local/googletest/lib/pkgconfig \
  LD_LIBRARY_PATH=/usr/local/psrdada/lib:/usr/local/grpc/lib:/usr/local/spdlog/lib:/usr/local/googletest/lib: \
  PATH=${PATH}:/usr/local/cuda/bin:/usr/local/psrdada/bin:/usr/local/grpc/bin:/usr/local/protoc-gen-doc/bin \
  GTEST_ROOT=/usr/local/googletest \
  PSRDADA_ROOT_DIR=/usr/local/psrdada
